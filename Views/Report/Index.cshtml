@{
    ViewData["Title"] = "Reports";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2><i class="fas fa-chart-pie"></i> Reports & Analytics</h2>
</div>

<div class="row g-3">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-chart-bar"></i> Monthly Income vs Expenses (Last 6 Months)</h5>
            </div>
            <div class="card-body">
                <canvas id="reportChart" height="80"></canvas>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-list"></i> Top Spending Categories</h5>
            </div>
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Category</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cat in ViewBag.TopCategories as List<(string Category, decimal Amount)>)
                        {
                            <tr>
                                <td>@cat.Category</td>
                                <td class="text-danger">â‚¹@cat.Amount.ToString("N2")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const reportData = @Html.Raw(Json.Serialize(ViewBag.MonthlyData));
        
        const ctx = document.getElementById('reportChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: reportData.map(d => ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'][d.month - 1]),
                datasets: [{
                    label: 'Income',
                    data: reportData.map(d => d.income),
                    backgroundColor: 'rgba(40, 167, 69, 0.8)'
                }, {
                    label: 'Expense',
                    data: reportData.map(d => d.expense),
                    backgroundColor: 'rgba(220, 53, 69, 0.8)'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });
    </script>
}

